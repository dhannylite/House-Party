[{"C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\HomePage.js":"3","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\JoinRoom.js":"4","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\CreateRoom.js":"5","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\Room.js":"6","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\components\\MusicPlayer.js":"7"},{"size":257,"mtime":1656158615029,"results":"8","hashOfConfig":"9"},{"size":1212,"mtime":1656414848201,"results":"10","hashOfConfig":"9"},{"size":788,"mtime":1656414878787,"results":"11","hashOfConfig":"9"},{"size":1549,"mtime":1656280111473,"results":"12","hashOfConfig":"9"},{"size":3362,"mtime":1656418769789,"results":"13","hashOfConfig":"9"},{"size":3640,"mtime":1656601879175,"results":"14","hashOfConfig":"9"},{"size":2183,"mtime":1656604352994,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yde0e3",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\index.js",[],["37","38"],"C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\App.js",["39"],"import CreateRoom from \"./pages/CreateRoom\";\nimport HomePage from \"./pages/HomePage\";\nimport JoinRoom from \"./pages/JoinRoom\";\nimport {Routes, Route, Navigate} from 'react-router-dom'\nimport Room from \"./pages/Room\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [roomCode, setRoomCode] = useState(null)\n  // useEffect(() => {\n  //   async function userInRoom() {\n  //     const response = await fetch('/api/user-in-room')\n  //     const data = await response.json()\n  //     console.log(data)\n  //     setRoomCode(data.code)\n  //   }\n  //   userInRoom()\n  // }, [])\n  function setRoomHandler(code) {\n    setRoomCode(code)\n  }\n  function clearRoomCode() {\n    setRoomCode(null)\n  }\n  console.log(roomCode)\n  return (\n    <div>\n      <Routes>\n        <Route path='/' element={!roomCode ? <HomePage onSet={setRoomHandler} /> : <Navigate to={`/room/${roomCode}`} />} />\n        <Route path='/join' element={<JoinRoom />} />\n        <Route path='/create' element={<CreateRoom />} />\n        <Route path=\"/room/:code\" element={<Room onClear={clearRoomCode} />} />\n      </Routes>\n    </div>\n  );\n}\n// !roomCode ? <HomePage /> : <Navigate replace to={`/room/${roomCode}`} \nexport default App;\n","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\HomePage.js",["40"],"import { Button } from '@material-ui/core'\r\nimport React, { useEffect } from 'react'\r\nimport './HomePage.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function HomePage(props) {\r\n  useEffect(() => {\r\n    async function userInRoom() {\r\n      const response = await fetch('/api/user-in-room')\r\n      const data = await response.json()\r\n      console.log(data)\r\n      props.onSet(data.code)\r\n    }\r\n    userInRoom()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='home'>\r\n      <h1>\r\n        House Party\r\n      </h1>\r\n      <div>\r\n        <Button variant='contained' color='primary' to='/join' component={Link}>JOIN A ROOM</Button>\r\n        <Button  variant='contained' color='secondary' to='/create' component={Link}>CREATE A ROOM</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\JoinRoom.js",["41"],"import { Button, TextField } from '@material-ui/core'\r\nimport React, { useRef, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport './JoinRoom.css'\r\n\r\nexport default function JoinRoom() {\r\n  const [enteredRoomCode, setEnteredRoomCode] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const navigate = useNavigate()\r\n  // const enteredRoomCodeRef = useRef()\r\n  function enteredRoomCodeHandler(event) {\r\n    setEnteredRoomCode(event.target.value)\r\n  }\r\n\r\n  async function joinRoomHandler() {\r\n    const reqOpt = {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        code: enteredRoomCode\r\n      })\r\n    }\r\n    const request = await fetch('/api/join-room', reqOpt)\r\n    if (request.ok) {\r\n      navigate(`/room/${enteredRoomCode}`)\r\n    } else {\r\n      setError('Room not found')\r\n    }\r\n  }\r\n  return (\r\n    <div className='join'>\r\n      <h1>Join A Room</h1>\r\n      <div>\r\n        <TextField\r\n          error={error}\r\n          label='code'\r\n          placeholder='Enter the Room Code'\r\n          value={enteredRoomCode}\r\n          variant='outlined'\r\n          helperText={error}\r\n          onChange={enteredRoomCodeHandler}\r\n        />\r\n      </div>\r\n      <div className='join-btn'>\r\n      <Button variant='contained' color='primary' onClick={joinRoomHandler}>Join Room</Button>\r\n      </div>\r\n      <div>\r\n      <Button variant='contained' color='secondary' to='/' component={Link} >Back</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\CreateRoom.js",["42","43"],"import React, { useState } from 'react'\r\nimport './CreateRoom.css'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport { Collapse, FormControlLabel, Radio, RadioGroup } from '@material-ui/core'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport {Alert} from '@material-ui/lab'\r\n\r\n\r\nexport default function CreateRoom(props) {\r\n  const defaultValue = 2\r\n  const [guestCanPause, setGuestCanPause] = useState(props.update ? props.guestCanPause : true)\r\n  const [voteToSkip, setVoteToSkip] = useState(props.update ? props.voteToSkip : defaultValue)\r\n  const [error, setError] = useState()\r\n  const [message, setMessage] = useState()\r\n  const navigate = useNavigate()\r\n\r\n  // console.log(guestCanPause)\r\n  function guestCanPauseHandler(event) {\r\n    setGuestCanPause(prev => {\r\n      return event.target.value === 'true' ? true : false\r\n    })\r\n  }\r\n  function voteToSkipHandler(event) {\r\n    setVoteToSkip(event.target.value)\r\n  }\r\n\r\n  async function createRoomHandler() {\r\n    const reqOpt = {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        guest_can_pause: guestCanPause,\r\n        vote_to_skip: voteToSkip\r\n      })\r\n    }\r\n\r\n    const response = await fetch('/api/create', reqOpt)\r\n    const data = await response.json()\r\n    navigate(`/room/${data.code}`)\r\n    console.log(voteToSkip)\r\n  }\r\n\r\n  async function updateRoomHandler() {\r\n    const reqOpt = {\r\n      method: 'PATCH',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        guest_can_pause: guestCanPause,\r\n        vote_to_skip: voteToSkip,\r\n        code: props.roomCode\r\n      })\r\n    }\r\n    const response = await fetch('/api/update-room', reqOpt)\r\n    if (response.ok) {\r\n      setMessage('Room Updated Successfully')\r\n    } else {\r\n      setError('Something went wrong')\r\n    }\r\n    const data = await response.json()\r\n  }\r\n  const title = props.update ? 'Update Room' : 'Create A Room'\r\n  return (\r\n    <div className='create'>\r\n      <Collapse in={error || message}>\r\n        {message ? <Alert severity='success' onClose={() => setMessage(null)}>{message}</Alert> : <Alert severity='error' onClose={() => setError(null)}>{error}</Alert> }\r\n      </Collapse>\r\n      <p>{title}</p>\r\n      <span>Guest Control of Playback State</span>\r\n      <form>\r\n        <RadioGroup row defaultValue={props.update ? props.guestCanPause.toString() : 'true'} onChange={guestCanPauseHandler}>\r\n          <FormControlLabel className='input' value='true' control={<Radio color='primary' />}\r\n            label='play/pause'\r\n            labelPlacement='bottom'\r\n          />\r\n          <FormControlLabel className='input' value='false' control={<Radio color='secondary' />}\r\n            label='No control'\r\n            labelPlacement='bottom'\r\n          />\r\n        </RadioGroup>\r\n      </form>\r\n      <form>\r\n        <input type='number' value={voteToSkip} min='1' max='5' step='.1' onChange={voteToSkipHandler}/>\r\n        <label>Votes Required To Skip Song</label>\r\n      </form>\r\n      {!props.update && <button className='create-btn' onClick={createRoomHandler}>Create A Room</button>}\r\n      {props.update && <button className='create-btn' onClick={updateRoomHandler}>Update Room</button>}\r\n     {!props.update && <Link className='back' to='/' >BACK</Link>}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\pages\\Room.js",["44","45","46"],"import { Button } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams, Link, useNavigate } from 'react-router-dom'\r\nimport MusicPlayer from '../components/MusicPlayer'\r\nimport CreateRoom from './CreateRoom'\r\nimport './Room.css'\r\n\r\nexport default function Room(props) {\r\n    const params = useParams()\r\n    const { code } = params\r\n    const [isHost, setIsHost] = useState(false)\r\n    const navigate = useNavigate()\r\n    const [guestCanPause, setGuestCanPause] = useState(true)\r\n    const [voteToSkip, setVoteToSkip] = useState(2)\r\n    const [showSettings, setShowSettings] = useState(false)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false)\r\n    const [song, setSong] = useState()\r\n    getRoomDetails()\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            async function getCurretSong() {\r\n                const response = await fetch('/spotify/current-song')\r\n                const data = await response.json()\r\n                setSong(data)\r\n                console.log(data)\r\n            }\r\n            getCurretSong()\r\n        \r\n    }, 1000)\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n        \r\n    }, [])\r\n    \r\n    async function getRoomDetails() {\r\n        console.log(1)\r\n        const response = await fetch(`/api/get-room?code=${code}`)\r\n        if (!response.ok) {\r\n            navigate('/')\r\n        }\r\n        const data = await response.json()\r\n        console.log(data, 3)\r\n        setIsHost(data.is_Host)\r\n        setGuestCanPause(data.guest_can_pause)\r\n        setVoteToSkip(data.vote_to_skip)\r\n        if (isHost) {\r\n            isAuthenticatedHandler()\r\n        }\r\n    }\r\n    \r\n    async function isAuthenticatedHandler() {\r\n        const response = await fetch('/spotify/is-authenticated')\r\n        const data = await response.json()\r\n        console.log(data,'kiil')\r\n        setIsAuthenticated(data.status)\r\n        if (!data.status) {\r\n            const response = await fetch('/spotify/get-auth-url')\r\n            const data = await response.json()\r\n            window.location.replace(data.url)\r\n        }\r\n    }\r\n\r\n    // async function getCurretSong() {\r\n    //     const response = await fetch('/spotify/current-song')\r\n    //     const data = await response.json()\r\n    //     setSong(data)\r\n    //     console.log(data)\r\n    // }\r\n\r\n    async function leaveRoomHandler() {\r\n        const reqOpt = {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        }\r\n        const response = await fetch('/api/leave-room', reqOpt)\r\n        const data = await response.json()\r\n        props.onClear()\r\n        navigate('/')\r\n    }\r\n\r\n    function showSettingsHandler() {\r\n        setShowSettings(true)\r\n    }\r\n    if (showSettings) {\r\n        return <div className='settings'>\r\n            <CreateRoom update={true} voteToSkip={voteToSkip} guestCanPause={guestCanPause} roomCode={code} />\r\n            <Button variant='contained' color='secondary' onClick={() => {setShowSettings(false)}}>Close</Button>\r\n        </div>\r\n    }\r\n  return (\r\n      <div className='room'>\r\n          <MusicPlayer {...song} />\r\n          {/* <p>room code: {code}</p>\r\n          <p>votes: {voteToSkip}</p>\r\n          <p>Guess Can Pause: {guestCanPause.toString()}</p>\r\n          <p>isHost: {isHost.toString()}</p> */}\r\n          {isHost && <Button onClick={showSettingsHandler} variant='contained' color='primary' className='setting'>Settings</Button>}\r\n          <Button variant='contained' color='secondary' onClick={leaveRoomHandler}>Leave Room</Button>\r\n      </div>\r\n  )\r\n}\r\n","C:\\Users\\user\\Desktop\\House Party\\music_controller\\frontend\\src\\components\\MusicPlayer.js",["47"],"import { Card, LinearProgress, IconButton } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { PlayArrow } from '@material-ui/icons'\r\nimport { Pause } from '@material-ui/icons'\r\nimport { SkipNext } from '@material-ui/icons'\r\nimport { SkipPrevious } from '@material-ui/icons'\r\nimport './MusicPlayer.css'\r\n\r\nexport default function MusicPlayer(props) {\r\n    const songProgress = props.time / props.duration * 100\r\n    function playSong() {\r\n        fetch('/spotify/play', {\r\n            method: 'PUT',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n    }\r\n    function pauseSong() {\r\n        fetch('/spotify/pause', {\r\n            method: 'PUT',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n    }\r\n    function skipSong() {\r\n        fetch('/spotify/skip', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n    }\r\n    function previousSong() {\r\n        fetch('/spotify/previous', {\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"}\r\n        })\r\n    }\r\n  return (\r\n      <div className='card'>\r\n          <div className='card-img-box'>\r\n              <img src={props.image_url} alt=\"albulm cover\"/>\r\n          </div>\r\n          <div className='content'>\r\n              \r\n          <div>\r\n              <h2>{props.title}</h2>\r\n          </div>\r\n          <div>\r\n              <h6>{props.artists}</h6>\r\n              </div>\r\n              <IconButton className='btn' onClick={previousSong}>\r\n                  <SkipPrevious /> \r\n              </IconButton>\r\n          <IconButton className='btn' onClick={props.is_playing ? pauseSong : playSong}>\r\n              {props.is_playing ? <Pause/> : <PlayArrow />}\r\n          </IconButton>\r\n          <IconButton className='btn' onClick={skipSong}>\r\n                  <SkipNext /> \r\n              </IconButton>\r\n              <div className='votes'>\r\n                vote to skip: {props.votes} / {props.votes_required}\r\n              </div>\r\n          <div>\r\n              <LinearProgress variant='determinate' value={songProgress}/>\r\n          </div>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":15,"column":6,"nodeType":"58","endLine":15,"endColumn":8,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"60","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":23},{"ruleId":"52","severity":1,"message":"61","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":19},{"ruleId":"52","severity":1,"message":"62","line":59,"column":11,"nodeType":"54","messageId":"55","endLine":59,"endColumn":15},{"ruleId":"52","severity":1,"message":"63","line":3,"column":21,"nodeType":"54","messageId":"55","endLine":3,"endColumn":25},{"ruleId":"52","severity":1,"message":"64","line":16,"column":12,"nodeType":"54","messageId":"55","endLine":16,"endColumn":27},{"ruleId":"52","severity":1,"message":"62","line":77,"column":15,"nodeType":"54","messageId":"55","endLine":77,"endColumn":19},{"ruleId":"52","severity":1,"message":"65","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":14},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["68"],"'useRef' is defined but never used.","'FormControl' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [props]",{"range":"71","text":"72"},[437,439],"[props]"]